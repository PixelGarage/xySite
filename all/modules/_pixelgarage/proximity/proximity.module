<?php
/**
 * @file
 * Provides a views style plugin creating regularly or irregularly distributed items animating on mouse approach.
 */

/**
 * Internal proximity ajax load status code -- Proximity item was not found.
 */
define('PROXIMITY_ITEM_NOT_FOUND', 1);


/**
 * Holds the base path for an item page callback. Use a 'unique' string to prevent conflicts with generated url's.
 */
define('PROXIMITY_ITEM_BASE_PATH', 'proximity-container-item/');

/**
 * Holds the base path for an item ajax callback. Use a 'unique' string to prevent conflicts with generated url's.
 */
define('PROXIMITY_ITEM_AJAX_PATH', 'ajax/pe-container-item/');


/**
 * Holds global parameters of page callback
 */
$page_callback_param = false;
$page_callback_container = false;


/* -----------------------------------------------------------------
 *  Proximity page / ajax callbacks
 * ----------------------------------------------------------------- */
/**
 * Implementation of hook_menu().
 */
function proximity_menu() {
  // handles item full page request
  $items[PROXIMITY_ITEM_BASE_PATH . '%/%'] = array(
    'page callback' => 'proximity_page_callback',
    'page arguments' => array(1,2),
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );
  // handles AJAX requests
  $items[PROXIMITY_ITEM_AJAX_PATH . '%/%'] = array(
    'page callback' => 'proximity_ajax_callback',
    'page arguments' => array(2,3),
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
    'delivery callback' => 'proximity_ajax_delivery_callback',
  );
  return $items;
}

/**
 * Page callback function for page request.
 */
function proximity_page_callback($container_index, $param) {
  global $page_callback_param, $page_callback_container;

  // set page callback parameters globally
  $page_callback_param = $param;
  $page_callback_container = $container_index;

  // return empty main content (item is rendered in proximity view)
  return '';
}

/**
 * Page callback function for AJAX request.
 */
function proximity_ajax_callback($container_index, $param) {
  $render_item = PROXIMITY_ITEM_NOT_FOUND;
  drupal_alter('proximity_ajax_render_item', $container_index, $param, $render_item);

  return $render_item;
}

/**
 * A specific proximity delivery callback that doesn't return a whole rendered page but instead returns
 * only the requested content of the ajax call.
 *
 * @param $page_callback_result mixed   Return value of the page callback function.
 */
function proximity_ajax_delivery_callback($page_callback_result) {
  if (isset($page_callback_result) && is_null(drupal_get_http_header('Content-Type'))) {
    drupal_add_http_header('Content-Type', 'text/html; charset=utf-8');
  }

  // Send appropriate HTTP-Header for browsers and search engines.
  global $language;
  drupal_add_http_header('Content-Language', $language->language);

  // Menu status constants are integers; page content is a string or array.
  $content = '';
  if (is_int($page_callback_result)) {
    switch ($page_callback_result) {
      case MENU_NOT_FOUND:
        drupal_add_http_header('Status', '404 Not Found');

        $content = t("Page not found");
        break;

      case MENU_ACCESS_DENIED:
        drupal_add_http_header('Status', '403 Forbidden');

        $content = t("Access denied");
        break;

      case MENU_SITE_OFFLINE:
        print t('Site under maintenance');
        break;

      case PROXIMITY_ITEM_NOT_FOUND:
        $content = t('Proximity item content not found');
        break;

      default:
        $content = t('Unknown error');
        break;
    }
  } elseif (isset($page_callback_result)) {
    // print the requested content as simple html document
    $content = is_string($page_callback_result) ? $page_callback_result : drupal_render($page_callback_result);
  }

  // print html (only content will be added to target element)
  $html = '<html><head><title></title></head>';
  $html .= '<body class="ajax-loaded-proximity-item">' . $content . '</body></html>';
  print $html;
  drupal_page_footer();
}



/* -----------------------------------------------------------------
 *  Proximity view functions
 * ----------------------------------------------------------------- */

/**
 * Implements hook_views_api().
 */
function proximity_views_api() {
  return array('api' => 3);
}

/**
 * Pre-process function for theme hook views_view_proximity (implemented as views_view_proximity.tpl.php).
 * This function prepares all necessary variables to create the markup for the proximity layout.
 *
 * @param $vars array   Variables used in the view theming.
 */
function template_preprocess_views_view_proximity(&$vars) {
  // Run preprocess function for unformatted style
  template_preprocess_views_view_unformatted($vars);

  // get saved view options
  $view = $vars['view'];
  $options = $vars['options'];

  //
  // render the specific item in the given proximity container (index)
  // in case of a deep item link callback
  global $page_callback_param, $page_callback_container;
  static $pe_container_index = 0;
  $rendered_item = null;

  // deep link callback: render the requested item if the current container equals the one of the deep link
  if ($page_callback_param && $pe_container_index == $page_callback_container) {
    $rendered_item = proximity_ajax_callback($page_callback_container, $page_callback_param);

    // reset global parameter
    $page_callback_param = false;
    $page_callback_container = false;
  }
  $vars['rendered_item'] = $rendered_item;


  // add additional proximity options for use in javascript
  global $base_url;
  $desc_selector = !empty($options['proximity_desc_selector']) ? $options['proximity_desc_selector'] : '';
  $ajax_base_url = $base_url . '/' . PROXIMITY_ITEM_AJAX_PATH . $pe_container_index . '/';
  $deep_link_base_url = '/' . PROXIMITY_ITEM_BASE_PATH . $pe_container_index . '/';

  $img_path = $base_url . '/' . drupal_get_path('module', 'proximity') . '/ajax-loader.gif';
  $ajax_loading_html = '<div id="proximity-ajax-loader"><img src="' . $img_path . '" alt="loading..."/></div>';

  // Setup proximity settings for specific container
  $container_id = 'pe-container-' . $pe_container_index;
  $js_settings = array(
    'proximity' => array(
      'deep_link_base_path' => PROXIMITY_ITEM_BASE_PATH,
      $container_id => array(
        // proximity parameter
        'position_randomly' => $options['proximity_position_randomly'],
        'random_grid_cell_size' => $options['proximity_random_grid_cell_size'],
        'item_selector' => '.pe-item ' . $options['proximity_item_selector'],
        'desc_selector' => $desc_selector,
        'start_scale' => $options['proximity_start_scale'],
        'end_scale' => $options['proximity_end_scale'],
        'start_opacity' => $options['proximity_start_opacity'],
        'end_opacity' => $options['proximity_end_opacity'],
        'extent' => $options['proximity_extent'],
        'trans_duration' => $options['proximity_trans_duration'],
        // ajax parameter
        'ajax_container' => $options['proximity_content_container'],
        'ajax_base_url' => $ajax_base_url,
        'ajax_loading_html' => $ajax_loading_html,
        'deep_link_base_url' => $base_url . $deep_link_base_url,
        'deep_link_request' => !empty($rendered_item),
      ),
    ),
  );
  $vars['container_id'] = $container_id;
  $vars['container_index'] = $pe_container_index++;

  // create ajax load array (a parameter per item to be added to the ajax url)
  $ajax_load_params = array();
  foreach ($view->result as $id => $item) {
    $ajax_load_params[$id] = $id;
  }
  drupal_alter('proximity_ajax_load_params', $pe_container_index, $view->result, $ajax_load_params);
  $vars['ajax_load_params'] = $ajax_load_params;
  $vars['deep_link_base_url'] = $deep_link_base_url;

  // define percentage width of items (floating grid layout)
  $count = count($view->result);
  $vars['percentage_width'] = 100 / min($count, 6); // max. 6 items on a row

  // close button text
  $vars['close_text'] = t('Schliessen');

  // Apply the needed files and js settings
  $path = drupal_get_path('module', 'proximity');
  drupal_add_js($js_settings, 'setting');
  drupal_add_js($path . '/js/jquery.proximity.js');
  drupal_add_js($path . '/js/isMobile.min.js');
  drupal_add_js($path . '/js/proximity.js');
  drupal_add_js($path . '/js/proximity.ajax.js');
  //drupal_add_css($path . '/css/proximity.css');
}
