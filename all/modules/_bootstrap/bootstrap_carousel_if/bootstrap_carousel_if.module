<?php

/**
 * @file
 * Bootstrap Carousel Image Field.
 */

/**
 * Implements hook_field_formatter_info().
 */
function bootstrap_carousel_if_field_formatter_info() {
  $info['bootstrap_carousel_if'] = array(
    'label' => t('Bootstrap Carousel'),
    'field types' => array('image'),
    'module' => 'bootstrap_carousel_if',
    'settings' => array(
      'interval' => '5000',
      'pause' => 0,
      'wrap' => 0,
      'keyboard' => 0,
      'indicators' => 1,
      'image_style' => 0,
    ),
  );
  return $info;
}

/**
 * Implements hook_theme().
 */
function bootstrap_carousel_if_theme() {
  return array(
    'bootstrap_carousel_if' => array(
      'variables' => array(
        'interval' => '5000',
        'pause' => 0,
        'wrap' => 0,
        'keyboard' => 0,
        'indicators' => 1,
        'image_style' => 0,
        'id' => '',
        'items' => array(),
      ),
    ),
  );
}

/**
 * Theme function.
 */
function theme_bootstrap_carousel_if($vars) {
  $files = array();
  if (!$vars['image_style']) {
    foreach ($vars['items'] as $file) {
      $file['path'] = $file['uri'];
      $files[] = theme('image', $file);
    }
  } else {
    foreach ($vars['items'] as $file) {
      $file['path'] = $file['uri'];
      $file['style_name'] = $vars['image_style'];
      $files[] = theme('image_style', $file);
    }
  }
  $filecount = count($files);
  $output = '
      <div id="' . $vars['id'] . '" class="carousel slide" data-ride="carousel" data-interval="' . $vars['interval'] . '" data-pause="' . $vars['pause'] . '" data-wrap="' . $vars['wrap'] .'" data-keyboard="' . $vars['keyboard'] . '">';
  if ($vars['indicators']) {
        $output .= '<!-- Indicators -->
        <ol class="carousel-indicators">';
        for ($i = 0; $i < $filecount; $i++) {
          if (!$i) {
            $output .= '<li data-target="#' . $vars['id'] . '" data-slide-to="0" class="active"></li>';
          } else {
            $output .= '<li data-target="#' . $vars['id'] . '" data-slide-to="' . $i . '"></li>';
          }
        }
        $output .= '</ol>';
  }
  
  $output .= '<div class="carousel-inner" role="listbox">';
  // Files/slides
  for ($i = 0; $i < $filecount; $i++) {
    $output .= (!$i) ? '<div class="item active">' : '<div class="item">';
    $output .= $files[$i];
    $output .= '</div>';
  }
  $output .= '</div><!-- Controls -->
        <a class="left carousel-control" href="#' . $vars['id'] . '" role="button" data-slide="prev">
          <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
          <span class="sr-only">Previous</span>
        </a>
        <a class="right carousel-control" href="#' . $vars['id'] . '" role="button" data-slide="next">
          <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
          <span class="sr-only">Next</span>
        </a>
      </div>
  ';
  return $output;
}

/**
 * Implements hook_field_formatter_view().
 */
function bootstrap_carousel_if_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element[0] = array(
    '#markup' => theme('bootstrap_carousel_if',
      array(
        'interval' => $display['settings']['interval'],
        'pause' => $display['settings']['pause'],
        'wrap' => $display['settings']['wrap'],
        'keyboard' => $display['settings']['keyboard'],
        'indicators' => $display['settings']['indicators'],
        'image_style' => $display['settings']['image_style'],
        'id' => drupal_clean_css_identifier($entity->title . ' ' . $instance['field_name']),
        'items' => $items,
      )
    ),
  );
  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function bootstrap_carousel_if_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $summary = '';
  if ($display['type'] == 'bootstrap_carousel_if') {
    $summary = t('Bootstrap carousel');
  }
  return $summary;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function bootstrap_carousel_if_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $settings = $instance['display'][$view_mode]['settings'];
  $options = array();
  $element['interval'] = array(
    '#title' => t('Interval'),
    '#type' => 'textfield',
    '#default_value' => $settings['interval'],
    '#required' => TRUE,
  );
  $element['pause'] = array(
    '#title' => t('Pause on hover'),
    '#type' => 'select',
    '#options' => array(0 => 'no', 'hover' => 'yes'),
    '#default_value' => $settings['pause'],
  );
  $element['wrap'] = array(
    '#title' => t('Wrap'),
    '#type' => 'select',
    '#options' => array(0 => 'no', 1 => 'yes'),
    '#default_value' => $settings['wrap'],
  );
  $element['keyboard'] = array(
    '#title' => t('Keyboard'),
    '#type' => 'select',
    '#options' => array(0 => 'no', 1 => 'yes'),
    '#default_value' => $settings['keyboard'],
  );
  $element['indicators'] = array(
    '#title' => t('Indicators'),
    '#type' => 'select',
    '#options' => array(0 => 'no', 1 => 'yes'),
    '#default_value' => $settings['indicators'],
  );
  
  // Get image styles
  $styles = image_styles();
  $options = array(
    0 => 'Original image',
  );
  foreach ($styles as $key => $value) {
    $options[$key] = $value['label'];
  }
  $element['image_style'] = array(
    '#title' => t('Image style'),
    '#type' => 'select',
    '#options' => $options,
    '#default_value' => $settings['image_style'],
  );
  
  return $element;
}
